{"ast":null,"code":"var _jsxFileName = \"D:\\\\UniDATA\\\\FYP\\\\Smart Construction\\\\Innovative-AI-Solutions-for-Smart-Construction\\\\src\\\\pages\\\\GenerateFrontElevation\\\\GenerateFrontElevation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './GenerateFrontElevation.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateFrontElevation = () => {\n  _s();\n  const [plotSize, setPlotSize] = useState('5 Marla');\n  const [imageUrl, setImageUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleGenerateClick = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Create a new FormData object\n      const formData = new FormData();\n      formData.append('image', selectedImageFile); // selectedImageFile should be the image file you want to send\n\n      const response = await axios.post('http://127.0.0.1:5000/generate', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.image) {\n        setImageUrl(`data:image/png;base64,${response.data.image}`);\n      } else {\n        setError('No image data received');\n      }\n    } catch (err) {\n      console.error(\"Error generating front elevation:\", err);\n      setError('Failed to generate image. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generate-front-elevation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Front Elevation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"plotSize\",\n        children: \"Select Plot Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"plotSize\",\n        value: plotSize,\n        onChange: e => setPlotSize(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5 Marla\",\n          children: \"5 Marla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateClick,\n      disabled: loading,\n      className: \"generate-btn\",\n      children: loading ? 'Generating...' : `Generate ${plotSize} Front Elevation`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Generated Front Elevation\",\n      className: \"generated-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateFrontElevation, \"EFzG65qZbcvoV73JHijzIlhC+gI=\");\n_c = GenerateFrontElevation;\nexport default GenerateFrontElevation;\nvar _c;\n$RefreshReg$(_c, \"GenerateFrontElevation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateFrontElevation","_s","plotSize","setPlotSize","imageUrl","setImageUrl","loading","setLoading","error","setError","handleGenerateClick","formData","FormData","append","selectedImageFile","response","post","headers","data","image","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","onClick","disabled","src","alt","_c","$RefreshReg$"],"sources":["D:/UniDATA/FYP/Smart Construction/Innovative-AI-Solutions-for-Smart-Construction/src/pages/GenerateFrontElevation/GenerateFrontElevation.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './GenerateFrontElevation.css';\r\nimport axios from 'axios';\r\n\r\nconst GenerateFrontElevation = () => {\r\n  const [plotSize, setPlotSize] = useState('5 Marla');\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleGenerateClick = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n        // Create a new FormData object\r\n        const formData = new FormData();\r\n        formData.append('image', selectedImageFile); // selectedImageFile should be the image file you want to send\r\n\r\n        const response = await axios.post('http://127.0.0.1:5000/generate', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n\r\n        if (response.data.image) {\r\n            setImageUrl(`data:image/png;base64,${response.data.image}`);\r\n        } else {\r\n            setError('No image data received');\r\n        }\r\n    } catch (err) {\r\n        console.error(\"Error generating front elevation:\", err);\r\n        setError('Failed to generate image. Please try again later.');\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"generate-front-elevation\">\r\n      <h2>Generate Front Elevation</h2>\r\n      <div className=\"input-container\">\r\n        <label htmlFor=\"plotSize\">Select Plot Size:</label>\r\n        <select\r\n          id=\"plotSize\"\r\n          value={plotSize}\r\n          onChange={(e) => setPlotSize(e.target.value)}\r\n        >\r\n          <option value=\"5 Marla\">5 Marla</option>\r\n          {/* Add more plot sizes if needed */}\r\n        </select>\r\n      </div>\r\n      <button\r\n        onClick={handleGenerateClick}\r\n        disabled={loading}\r\n        className=\"generate-btn\"\r\n      >\r\n        {loading ? 'Generating...' : `Generate ${plotSize} Front Elevation`}\r\n      </button>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {imageUrl && (\r\n        <img\r\n          src={imageUrl}\r\n          alt=\"Generated Front Elevation\"\r\n          className=\"generated-image\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateFrontElevation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}