{"ast":null,"code":"var _jsxFileName = \"D:\\\\UniDATA\\\\FYP\\\\Smart Construction\\\\Innovative-AI-Solutions-for-Smart-Construction\\\\src\\\\pages\\\\GenerateFrontElevation\\\\GenerateFrontElevation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./GenerateFrontElevation.css\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header/Header\"; // Assuming Header is already implemented\nimport Footer from \"../../components/Footer/Footer\"; // Assuming Footer is already implemented\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateFrontElevation = () => {\n  _s();\n  const [plotSize, setPlotSize] = useState(\"5 Marla\"); // State to hold the selected plot size\n  const [imageUrl, setImageUrl] = useState(null); // State to hold the generated image URL\n  const [loading, setLoading] = useState(false); // State to handle loading spinner\n  const [error, setError] = useState(null); // State to display errors\n\n  // Function to handle the \"Generate\" button click\n  const handleGenerateClick = async () => {\n    setLoading(true); // Show loading indicator\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/generate\",\n      // Update with your Flask backend URL\n      {\n        plotSize\n      },\n      // Sending plot size as part of the request body\n      {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.data.image) {\n        // Display the generated image\n        setImageUrl(`data:image/png;base64,${response.data.image}`);\n      } else {\n        setError(\"No image data received from the server.\");\n      }\n    } catch (err) {\n      console.error(\"Error generating front elevation:\", err);\n      setError(\"Failed to generate image. Please try again later.\");\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-front-elevation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generate Front Elevation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plotSize\",\n            children: \"Select Plot Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"plotSize\",\n            value: plotSize,\n            onChange: e => setPlotSize(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5 Marla\",\n              children: \"5 Marla\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10 Marla\",\n              children: \"10 Marla\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1 Kanal\",\n              children: \"1 Kanal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateClick,\n          disabled: loading,\n          className: \"generate-btn\",\n          children: loading ? \"Generating...\" : `Generate ${plotSize} Front Elevation`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated Front Elevation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Generated Front Elevation\",\n          className: \"generated-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateFrontElevation, \"t7FHh7BfJ+M/LHwS9k64KVnoFQM=\");\n_c = GenerateFrontElevation;\nexport default GenerateFrontElevation;\nvar _c;\n$RefreshReg$(_c, \"GenerateFrontElevation\");","map":{"version":3,"names":["React","useState","axios","Header","Footer","jsxDEV","_jsxDEV","GenerateFrontElevation","_s","plotSize","setPlotSize","imageUrl","setImageUrl","loading","setLoading","error","setError","handleGenerateClick","response","post","headers","data","image","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","onClick","disabled","src","alt","_c","$RefreshReg$"],"sources":["D:/UniDATA/FYP/Smart Construction/Innovative-AI-Solutions-for-Smart-Construction/src/pages/GenerateFrontElevation/GenerateFrontElevation.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./GenerateFrontElevation.css\";\r\nimport axios from \"axios\";\r\nimport Header from \"../../components/Header/Header\"; // Assuming Header is already implemented\r\nimport Footer from \"../../components/Footer/Footer\"; // Assuming Footer is already implemented\r\n\r\nconst GenerateFrontElevation = () => {\r\n  const [plotSize, setPlotSize] = useState(\"5 Marla\"); // State to hold the selected plot size\r\n  const [imageUrl, setImageUrl] = useState(null); // State to hold the generated image URL\r\n  const [loading, setLoading] = useState(false); // State to handle loading spinner\r\n  const [error, setError] = useState(null); // State to display errors\r\n\r\n  // Function to handle the \"Generate\" button click\r\n  const handleGenerateClick = async () => {\r\n    setLoading(true); // Show loading indicator\r\n    setError(null); // Reset any previous errors\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:5000/generate\", // Update with your Flask backend URL\r\n        { plotSize }, // Sending plot size as part of the request body\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.image) {\r\n        // Display the generated image\r\n        setImageUrl(`data:image/png;base64,${response.data.image}`);\r\n      } else {\r\n        setError(\"No image data received from the server.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating front elevation:\", err);\r\n      setError(\"Failed to generate image. Please try again later.\");\r\n    } finally {\r\n      setLoading(false); // Hide loading indicator\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Header /> {/* Reuse your existing Header component */}\r\n      <main className=\"main-content\">\r\n        <div className=\"generate-front-elevation\">\r\n          <h2>Generate Front Elevation</h2>\r\n          <div className=\"input-container\">\r\n            <label htmlFor=\"plotSize\">Select Plot Size:</label>\r\n            <select\r\n              id=\"plotSize\"\r\n              value={plotSize}\r\n              onChange={(e) => setPlotSize(e.target.value)}\r\n            >\r\n              <option value=\"5 Marla\">5 Marla</option>\r\n              <option value=\"10 Marla\">10 Marla</option>\r\n              <option value=\"1 Kanal\">1 Kanal</option>\r\n            </select>\r\n          </div>\r\n          <button\r\n            onClick={handleGenerateClick}\r\n            disabled={loading}\r\n            className=\"generate-btn\"\r\n          >\r\n            {loading ? \"Generating...\" : `Generate ${plotSize} Front Elevation`}\r\n          </button>\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n        </div>\r\n\r\n        {/* Display the generated image */}\r\n        {imageUrl && (\r\n          <div className=\"image-container\">\r\n            <h3>Generated Front Elevation</h3>\r\n            <img\r\n              src={imageUrl}\r\n              alt=\"Generated Front Elevation\"\r\n              className=\"generated-image\"\r\n            />\r\n          </div>\r\n        )}\r\n      </main>\r\n      <Footer /> {/* Reuse your existing Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateFrontElevation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}